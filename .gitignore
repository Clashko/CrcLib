## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates
*.env

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX project.lock.json
project.lock.json

# DNX project.json artifacts
artifacts/

# StyleCop
StyleCopReport.xml

# FxCop
FxCopReport.xml

# Microsoft Code Analysis
CodeAnalysisLog.xml

# Roslyn Tags
*.roslyncodeanalysis.sarif.json

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/

# Tabs Studio
*.tabs.xml

# Telerik's JustDecompile decompiled assembly folder
%APPDATA%\JustDecompile

# Telerik's JustTrace log folder
%APPDATA%\JustTrace

# AppVeyor test data
*.appveyor.yml

# TeamCity change authors
.teamcity_state.xml

# TeamCity meta-runner folder
.meta-runner

# SonarQube scanner meta-data
.sonarqube

# Visual Studio Code Folders
.vscode/

# Visual Studio code coverage results
*.coverage
*.coveragexml

# Visual Studio performance profiling
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Test Explorer
*.testsettings

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_/
.*crunch*.local.xml

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
*.snupkg

# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config

# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecff/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_.settings
*.dwpro

# Microsoft Fakes
FakesAssemblies/

# Node.js Tools for Visual Studio
node_modules/

# Build Generalization
*.cache
*.cer
*.dir
*.dll
*.doc
*.docx
*.exe
*.gif
*.ico
*.jpeg
*.jpg
*.opensdf
*.pdb
*.pdf
*.png
*.sdf
*.suo
*.tlb
*.tmp
*.tmp_proj
*.user
*.vshost.exe
*.vsp
*.vspx
*.xlsx
*.zip

# Additional files
*.vsix
*.vsixmanifest
*.vssettings

# JetBrains Rider
.idea/

# CodeMaid
*.codemaid

# BenchmarkDotNet
BenchmarkDotNet.Artifacts/

# FakeXrmEasy
*.crmsnapshot

# Service Fabric
*.sfproj

# Paket
.paket/paket.exe
.paket/paket.targets
.paket/paket.bootstrapper.exe
.paket/paket.lock
.paket/paket.dependencies
.paket/paket.references
.paket/paket.local
.paket/paket-files/

# F#
*.fs.orig
*.fsi.orig
*.fsx.orig

# FAKE
.fake/

# Ionide
.ionide/

# Visual Studio Live Share
.vsls.json
